맵 : 2차원(가로 세로)
플레이어 : 없음
몬스터 : 4마리(8방향 랜덤이동, 이동한 곳의 아이템을 먹음, 아이템을 먹으면 그 자리는 빈자리가 됨)
불릿 : 없음
아이템 : 맵 전역에 배포


싱글톤 패턴
 > 애플리케이션이 시작될 때 어떤 클래스가 최초 한번만 메모리를 할당하고 그 메모리에 인스턴스를 만들어 사용하는 디자인 패턴
 > 생성자가 여러 차례 호출 되더라도 실제로 생성되는 객체는 하나고 최초 생성 이후에 호출된 생성자는 최초에 생성한 객체를 반환한다
 >> 단 하나의 인스턴스를 생성해 사용하는 디자인 패턴

 쓰는이유
 > 고정된 메모리 영역을 얻으면서 한번의 생성으로 인스턴스를 사용하기 때문에 메모리 낭비를 방지할 수 있음
 > 전역 인스턴스 이기 때문에 다른 클래스의 인스턴스를 공유하기 쉬움
 > DBCP(Database Connection Pool) 처럼 공통된 객체를 여러개 생성해서 사용해야하는 상황에서 많이 사용
 > 안드로이드 앱같은 경우 각 액티비티나 클래스별로 주요  클래스들을 일일이 전달하기 번거롭기 때문에 싱글톤 클래스를 만들어 어디서나 접근하도록 설계하는 것이 편함
 >> 인스턴스가 절대적으로 한개만 존재하는 것을 보증하고 싶을 경우 사용
 >> 두 번째 이용시부터는 객체 로딩시간이 현저하게 줄어 성능이 좋아짐

> 레퍼런스 변수를 쓰는거랑 큰 차이점을 알 수가 없음

